CS3753 (Operating Systems)
Fall 2014
University of Colorado Boulder
Programming Assignment 2
Public Code

By Samuel Volin, Alexander Tsankov, and Cristobal Salazar - 2014

---Folders---
input pa2-files input.zip --leak-check=full lookup lookup.c lookup.o
make Makefile multi-lookup multi-lookup.c multi-lookup.h multi-lookup.o
out.txt output.txt pa2.pdf pa2-files.zip pthread-hello pthread-hello.c 
pthread-hello.o queue.c queue.h queue.o queueTest queueTest.c queueTest.o
results-ref.txt temp.c test util.c util.h util.o -v

---Executables---
lookup - A basic non-threaded DNS query-er
multi-lookup - A threaded DNS query-er
queueTest - Unit test program for queue
pthread-hello ; A simple threaded "Hello World" program

---Examples---
Build:
 make

Clean:
 make clean

Lookup DNS info for all names files in input folder using mutli-threading:
 ./multi-lookup input/names*.txt results.txt

Check queue for memory leaks:
 valgrind ./queueTest

Run pthread-hello
 ./pthread-hello

Extra Creadit:
Producer threads ensure that their requests have been resolved. This was done by keeping an array of every hostname that has, for a fact,
been resolved by the consumer. We also had an array for each producer that included all hostnames that were requested by said producer. We set up a while loop such that every 250 ms, the producer thread would check to see if one of the names in its requested array had been resolved (put into the resolved array). The thread prints out the hostname that it knows it has been resolved. The thread will then exit once it has seen that all that its requests have been resolved. 

Consumer threads take into account the number of cores availible.



