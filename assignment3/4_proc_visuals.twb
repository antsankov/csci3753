<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='mac' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0925.1717                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='4_proc_results' inline='true' name='textscan.41942.520618044000' version='8.3'>
      <connection class='textscan' directory='/Users/antsankov/Google Drive/semester_5/operatingSystems/csci3753/assignment3' filename='4_proc_results.csv'>
        <relation name='4_proc_results#csv' table='[4_proc_results#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Proc-Type' ordinal='0' />
            <column datatype='string' name='Sched' ordinal='1' />
            <column datatype='integer' name='Forks' ordinal='2' />
            <column datatype='real' name='wall' ordinal='3' />
            <column datatype='real' name='user' ordinal='4' />
            <column datatype='real' name='system' ordinal='5' />
            <column datatype='real' name='CPU' ordinal='6' />
            <column datatype='integer' name='i-switched' ordinal='7' />
            <column datatype='integer' name='v-switched' ordinal='8' />
            <column datatype='real' name='wait-time ' ordinal='9' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Proc-Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Proc-Type]</local-name>
            <parent-name>[4_proc_results#csv]</parent-name>
            <remote-alias>Proc-Type</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sched</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sched]</local-name>
            <parent-name>[4_proc_results#csv]</parent-name>
            <remote-alias>Sched</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Forks</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Forks]</local-name>
            <parent-name>[4_proc_results#csv]</parent-name>
            <remote-alias>Forks</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wall</remote-name>
            <remote-type>5</remote-type>
            <local-name>[wall]</local-name>
            <parent-name>[4_proc_results#csv]</parent-name>
            <remote-alias>wall</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>user</remote-name>
            <remote-type>5</remote-type>
            <local-name>[user]</local-name>
            <parent-name>[4_proc_results#csv]</parent-name>
            <remote-alias>user</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>system</remote-name>
            <remote-type>5</remote-type>
            <local-name>[system]</local-name>
            <parent-name>[4_proc_results#csv]</parent-name>
            <remote-alias>system</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CPU</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CPU]</local-name>
            <parent-name>[4_proc_results#csv]</parent-name>
            <remote-alias>CPU</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>i-switched</remote-name>
            <remote-type>20</remote-type>
            <local-name>[i-switched]</local-name>
            <parent-name>[4_proc_results#csv]</parent-name>
            <remote-alias>i-switched</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v-switched</remote-name>
            <remote-type>20</remote-type>
            <local-name>[v-switched]</local-name>
            <parent-name>[4_proc_results#csv]</parent-name>
            <remote-alias>v-switched</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wait-time </remote-name>
            <remote-type>5</remote-type>
            <local-name>[wait-time ]</local-name>
            <parent-name>[4_proc_results#csv]</parent-name>
            <remote-alias>wait-time </remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[4_proc_results#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='record-delimiter'>&quot;\\r&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[Forks]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='I-Switched' datatype='integer' name='[i-switched]' role='measure' type='quantitative'>
      </column>
      <column caption='System' datatype='real' name='[system]' role='measure' type='quantitative'>
      </column>
      <column caption='User' datatype='real' name='[user]' role='measure' type='quantitative'>
      </column>
      <column caption='V-Switched' datatype='integer' name='[v-switched]' role='measure' type='quantitative'>
      </column>
      <column caption='Wait-Time' datatype='real' name='[wait-time ]' role='measure' type='quantitative'>
      </column>
      <column caption='Wall' datatype='real' name='[wall]' role='measure' type='quantitative'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='CPU Bound Processes'>
      <table>
        <view>
          <datasources>
            <datasource caption='4_proc_results' name='textscan.41942.520618044000' />
          </datasources>
          <datasource-dependencies datasource='textscan.41942.520618044000'>
            <column datatype='real' name='[CPU]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Forks]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Proc-Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Sched]' role='dimension' type='nominal'>
            </column>
            <column caption='I-Switched' datatype='integer' name='[i-switched]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Forks]' derivation='None' name='[none:Forks:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Proc-Type]' derivation='None' name='[none:Proc-Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sched]' derivation='None' name='[none:Sched:nk]' pivot='key' type='nominal' />
            <column-instance column='[CPU]' derivation='Sum' name='[sum:CPU:qk]' pivot='key' type='quantitative' />
            <column-instance column='[i-switched]' derivation='Sum' name='[sum:i-switched:qk]' pivot='key' type='quantitative' />
            <column-instance column='[system]' derivation='Sum' name='[sum:system:qk]' pivot='key' type='quantitative' />
            <column-instance column='[user]' derivation='Sum' name='[sum:user:qk]' pivot='key' type='quantitative' />
            <column-instance column='[v-switched]' derivation='Sum' name='[sum:v-switched:qk]' pivot='key' type='quantitative' />
            <column-instance column='[wait-time ]' derivation='Sum' name='[sum:wait-time :qk]' pivot='key' type='quantitative' />
            <column-instance column='[wall]' derivation='Sum' name='[sum:wall:qk]' pivot='key' type='quantitative' />
            <column caption='System' datatype='real' name='[system]' role='measure' type='quantitative'>
            </column>
            <column caption='User' datatype='real' name='[user]' role='measure' type='quantitative'>
            </column>
            <column caption='V-Switched' datatype='integer' name='[v-switched]' role='measure' type='quantitative'>
            </column>
            <column caption='Wait-Time' datatype='real' name='[wait-time ]' role='measure' type='quantitative'>
            </column>
            <column caption='Wall' datatype='real' name='[wall]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.41942.520618044000].[none:Proc-Type:nk]'>
            <groupfilter function='member' level='[none:Proc-Type:nk]' member='&quot;CPU&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.41942.520618044000].[none:Proc-Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[textscan.41942.520618044000].[sum:CPU:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[textscan.41942.520618044000].[sum:i-switched:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
          </pane>
          <pane id='3' y-axis-name='[textscan.41942.520618044000].[sum:wait-time :qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
          </pane>
          <pane id='4' y-axis-name='[textscan.41942.520618044000].[sum:wall:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
          </pane>
          <pane id='5' y-axis-name='[textscan.41942.520618044000].[sum:v-switched:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
          </pane>
          <pane id='6' y-axis-name='[textscan.41942.520618044000].[sum:user:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
          </pane>
          <pane id='7' y-axis-name='[textscan.41942.520618044000].[sum:system:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([textscan.41942.520618044000].[sum:CPU:qk] + ([textscan.41942.520618044000].[sum:i-switched:qk] + ([textscan.41942.520618044000].[sum:v-switched:qk] + ([textscan.41942.520618044000].[sum:wait-time :qk] + ([textscan.41942.520618044000].[sum:wall:qk] + ([textscan.41942.520618044000].[sum:user:qk] + [textscan.41942.520618044000].[sum:system:qk]))))))</rows>
        <cols>([textscan.41942.520618044000].[none:Proc-Type:nk] / ([textscan.41942.520618044000].[none:Sched:nk] / [textscan.41942.520618044000].[none:Forks:ok]))</cols>
      </table>
    </worksheet>
    <worksheet name='IO Bound Procs'>
      <table>
        <view>
          <datasources>
            <datasource caption='4_proc_results' name='textscan.41942.520618044000' />
          </datasources>
          <datasource-dependencies datasource='textscan.41942.520618044000'>
            <column datatype='real' name='[CPU]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Forks]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Proc-Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Sched]' role='dimension' type='nominal'>
            </column>
            <column caption='I-Switched' datatype='integer' name='[i-switched]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Forks]' derivation='None' name='[none:Forks:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Proc-Type]' derivation='None' name='[none:Proc-Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sched]' derivation='None' name='[none:Sched:nk]' pivot='key' type='nominal' />
            <column-instance column='[CPU]' derivation='Sum' name='[sum:CPU:qk]' pivot='key' type='quantitative' />
            <column-instance column='[i-switched]' derivation='Sum' name='[sum:i-switched:qk]' pivot='key' type='quantitative' />
            <column-instance column='[system]' derivation='Sum' name='[sum:system:qk]' pivot='key' type='quantitative' />
            <column-instance column='[user]' derivation='Sum' name='[sum:user:qk]' pivot='key' type='quantitative' />
            <column-instance column='[v-switched]' derivation='Sum' name='[sum:v-switched:qk]' pivot='key' type='quantitative' />
            <column-instance column='[wait-time ]' derivation='Sum' name='[sum:wait-time :qk]' pivot='key' type='quantitative' />
            <column-instance column='[wall]' derivation='Sum' name='[sum:wall:qk]' pivot='key' type='quantitative' />
            <column caption='System' datatype='real' name='[system]' role='measure' type='quantitative'>
            </column>
            <column caption='User' datatype='real' name='[user]' role='measure' type='quantitative'>
            </column>
            <column caption='V-Switched' datatype='integer' name='[v-switched]' role='measure' type='quantitative'>
            </column>
            <column caption='Wait-Time' datatype='real' name='[wait-time ]' role='measure' type='quantitative'>
            </column>
            <column caption='Wall' datatype='real' name='[wall]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.41942.520618044000].[none:Proc-Type:nk]'>
            <groupfilter function='member' level='[none:Proc-Type:nk]' member='&quot;IO&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.41942.520618044000].[none:Proc-Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[textscan.41942.520618044000].[sum:CPU:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[textscan.41942.520618044000].[sum:i-switched:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
          </pane>
          <pane id='3' y-axis-name='[textscan.41942.520618044000].[sum:wait-time :qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
          </pane>
          <pane id='4' y-axis-name='[textscan.41942.520618044000].[sum:wall:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
          </pane>
          <pane id='5' y-axis-name='[textscan.41942.520618044000].[sum:v-switched:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
          </pane>
          <pane id='6' y-axis-name='[textscan.41942.520618044000].[sum:user:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
          </pane>
          <pane id='7' y-axis-name='[textscan.41942.520618044000].[sum:system:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([textscan.41942.520618044000].[sum:CPU:qk] + ([textscan.41942.520618044000].[sum:i-switched:qk] + ([textscan.41942.520618044000].[sum:v-switched:qk] + ([textscan.41942.520618044000].[sum:wait-time :qk] + ([textscan.41942.520618044000].[sum:wall:qk] + ([textscan.41942.520618044000].[sum:user:qk] + [textscan.41942.520618044000].[sum:system:qk]))))))</rows>
        <cols>([textscan.41942.520618044000].[none:Proc-Type:nk] / ([textscan.41942.520618044000].[none:Sched:nk] / [textscan.41942.520618044000].[none:Forks:ok]))</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='4_proc_results' name='textscan.41942.520618044000' />
          </datasources>
          <datasource-dependencies datasource='textscan.41942.520618044000'>
            <column aggregation='Sum' datatype='integer' name='[Forks]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Proc-Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Sched]' role='dimension' type='nominal'>
            </column>
            <column caption='I-Switched' datatype='integer' name='[i-switched]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Forks]' derivation='None' name='[none:Forks:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Proc-Type]' derivation='None' name='[none:Proc-Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sched]' derivation='None' name='[none:Sched:nk]' pivot='key' type='nominal' />
            <column-instance column='[i-switched]' derivation='Sum' name='[sum:i-switched:qk]' pivot='key' type='quantitative' />
            <column-instance column='[user]' derivation='Sum' name='[sum:user:qk]' pivot='key' type='quantitative' />
            <column-instance column='[v-switched]' derivation='Sum' name='[sum:v-switched:qk]' pivot='key' type='quantitative' />
            <column-instance column='[wait-time ]' derivation='Sum' name='[sum:wait-time :qk]' pivot='key' type='quantitative' />
            <column-instance column='[wall]' derivation='Sum' name='[sum:wall:qk]' pivot='key' type='quantitative' />
            <column caption='User' datatype='real' name='[user]' role='measure' type='quantitative'>
            </column>
            <column caption='V-Switched' datatype='integer' name='[v-switched]' role='measure' type='quantitative'>
            </column>
            <column caption='Wait-Time' datatype='real' name='[wait-time ]' role='measure' type='quantitative'>
            </column>
            <column caption='Wall' datatype='real' name='[wall]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[textscan.41942.520618044000].[sum:wall:qk]' value='49' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.41942.520618044000].[none:Forks:ok]' value='20' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Forks:ok]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[textscan.41942.520618044000].[sum:wall:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Forks:ok]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[textscan.41942.520618044000].[sum:i-switched:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Forks:ok]' />
            </encodings>
          </pane>
          <pane id='3' y-axis-name='[textscan.41942.520618044000].[sum:user:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Forks:ok]' />
            </encodings>
          </pane>
          <pane id='4' y-axis-name='[textscan.41942.520618044000].[sum:v-switched:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Forks:ok]' />
            </encodings>
          </pane>
          <pane id='5' y-axis-name='[textscan.41942.520618044000].[sum:wait-time :qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Forks:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>([textscan.41942.520618044000].[sum:wall:qk] + ([textscan.41942.520618044000].[sum:i-switched:qk] + ([textscan.41942.520618044000].[sum:user:qk] + ([textscan.41942.520618044000].[sum:v-switched:qk] + [textscan.41942.520618044000].[sum:wait-time :qk]))))</rows>
        <cols>([textscan.41942.520618044000].[none:Proc-Type:nk] / ([textscan.41942.520618044000].[none:Sched:nk] / [textscan.41942.520618044000].[none:Forks:ok]))</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='4_proc_results' name='textscan.41942.520618044000' />
          </datasources>
          <datasource-dependencies datasource='textscan.41942.520618044000'>
            <column datatype='real' name='[CPU]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Forks]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Proc-Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Sched]' role='dimension' type='nominal'>
            </column>
            <column caption='I-Switched' datatype='integer' name='[i-switched]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Forks]' derivation='None' name='[none:Forks:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Proc-Type]' derivation='None' name='[none:Proc-Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sched]' derivation='None' name='[none:Sched:nk]' pivot='key' type='nominal' />
            <column-instance column='[CPU]' derivation='Sum' name='[sum:CPU:qk]' pivot='key' type='quantitative' />
            <column-instance column='[i-switched]' derivation='Sum' name='[sum:i-switched:qk]' pivot='key' type='quantitative' />
            <column-instance column='[system]' derivation='Sum' name='[sum:system:qk]' pivot='key' type='quantitative' />
            <column-instance column='[user]' derivation='Sum' name='[sum:user:qk]' pivot='key' type='quantitative' />
            <column-instance column='[v-switched]' derivation='Sum' name='[sum:v-switched:qk]' pivot='key' type='quantitative' />
            <column-instance column='[wait-time ]' derivation='Sum' name='[sum:wait-time :qk]' pivot='key' type='quantitative' />
            <column-instance column='[wall]' derivation='Sum' name='[sum:wall:qk]' pivot='key' type='quantitative' />
            <column caption='System' datatype='real' name='[system]' role='measure' type='quantitative'>
            </column>
            <column caption='User' datatype='real' name='[user]' role='measure' type='quantitative'>
            </column>
            <column caption='V-Switched' datatype='integer' name='[v-switched]' role='measure' type='quantitative'>
            </column>
            <column caption='Wait-Time' datatype='real' name='[wait-time ]' role='measure' type='quantitative'>
            </column>
            <column caption='Wall' datatype='real' name='[wall]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.41942.520618044000].[none:Proc-Type:nk]'>
            <groupfilter function='member' level='[none:Proc-Type:nk]' member='&quot;MIX&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.41942.520618044000].[none:Proc-Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[textscan.41942.520618044000].[sum:CPU:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[textscan.41942.520618044000].[sum:i-switched:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
          </pane>
          <pane id='3' y-axis-name='[textscan.41942.520618044000].[sum:wait-time :qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
          </pane>
          <pane id='4' y-axis-name='[textscan.41942.520618044000].[sum:wall:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
          </pane>
          <pane id='5' y-axis-name='[textscan.41942.520618044000].[sum:v-switched:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
          </pane>
          <pane id='6' y-axis-name='[textscan.41942.520618044000].[sum:user:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
          </pane>
          <pane id='7' y-axis-name='[textscan.41942.520618044000].[sum:system:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([textscan.41942.520618044000].[sum:CPU:qk] + ([textscan.41942.520618044000].[sum:i-switched:qk] + ([textscan.41942.520618044000].[sum:v-switched:qk] + ([textscan.41942.520618044000].[sum:wait-time :qk] + ([textscan.41942.520618044000].[sum:wall:qk] + ([textscan.41942.520618044000].[sum:user:qk] + [textscan.41942.520618044000].[sum:system:qk]))))))</rows>
        <cols>([textscan.41942.520618044000].[none:Proc-Type:nk] / ([textscan.41942.520618044000].[none:Sched:nk] / [textscan.41942.520618044000].[none:Forks:ok]))</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[textscan.41942.520618044000].[none:Forks:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.41942.520618044000].[none:Forks:ok]</field>
          <field>[textscan.41942.520618044000].[none:Sched:nk]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
        <node-selection select-tuples='false'>
          <oriented-node-reference orientation='vertical'>
            <node-reference>
              <axis>[textscan.41942.520618044000].[sum:wall:qk]</axis>
            </node-reference>
            <page-reference>
            </page-reference>
          </oriented-node-reference>
        </node-selection>
      </selection-collection>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='CPU Bound Processes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[textscan.41942.520618044000].[none:Sched:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.41942.520618044000].[none:Sched:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='IO Bound Procs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[textscan.41942.520618044000].[none:Sched:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.41942.520618044000].[none:Sched:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[textscan.41942.520618044000].[none:Sched:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.41942.520618044000].[none:Sched:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='CPU Bound Processes' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='IO Bound Procs' width='192'>
      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
      /z8pA8eoQD8hBgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
