<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='mac' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0925.1717                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='4_proc_results' inline='true' name='textscan.41942.520618044000' version='8.3'>
      <connection class='textscan' directory='/Users/antsankov/Google Drive/semester_5/operatingSystems/csci3753/assignment3' filename='4_proc_results.csv'>
        <relation name='4_proc_results#csv' table='[4_proc_results#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Proc-Type' ordinal='0' />
            <column datatype='string' name='Sched' ordinal='1' />
            <column datatype='integer' name='Forks' ordinal='2' />
            <column datatype='real' name='wall' ordinal='3' />
            <column datatype='real' name='user' ordinal='4' />
            <column datatype='real' name='system' ordinal='5' />
            <column datatype='real' name='CPU' ordinal='6' />
            <column datatype='integer' name='i-switched' ordinal='7' />
            <column datatype='integer' name='v-switched' ordinal='8' />
            <column datatype='real' name='wait-time ' ordinal='9' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Proc-Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Proc-Type]</local-name>
            <parent-name>[4_proc_results#csv]</parent-name>
            <remote-alias>Proc-Type</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sched</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sched]</local-name>
            <parent-name>[4_proc_results#csv]</parent-name>
            <remote-alias>Sched</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Forks</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Forks]</local-name>
            <parent-name>[4_proc_results#csv]</parent-name>
            <remote-alias>Forks</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wall</remote-name>
            <remote-type>5</remote-type>
            <local-name>[wall]</local-name>
            <parent-name>[4_proc_results#csv]</parent-name>
            <remote-alias>wall</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>user</remote-name>
            <remote-type>5</remote-type>
            <local-name>[user]</local-name>
            <parent-name>[4_proc_results#csv]</parent-name>
            <remote-alias>user</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>system</remote-name>
            <remote-type>5</remote-type>
            <local-name>[system]</local-name>
            <parent-name>[4_proc_results#csv]</parent-name>
            <remote-alias>system</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CPU</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CPU]</local-name>
            <parent-name>[4_proc_results#csv]</parent-name>
            <remote-alias>CPU</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>i-switched</remote-name>
            <remote-type>20</remote-type>
            <local-name>[i-switched]</local-name>
            <parent-name>[4_proc_results#csv]</parent-name>
            <remote-alias>i-switched</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v-switched</remote-name>
            <remote-type>20</remote-type>
            <local-name>[v-switched]</local-name>
            <parent-name>[4_proc_results#csv]</parent-name>
            <remote-alias>v-switched</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wait-time </remote-name>
            <remote-type>5</remote-type>
            <local-name>[wait-time ]</local-name>
            <parent-name>[4_proc_results#csv]</parent-name>
            <remote-alias>wait-time </remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[4_proc_results#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='record-delimiter'>&quot;\\r&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[CPU]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Forks]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='I-Switched' datatype='integer' name='[i-switched]' role='measure' type='quantitative'>
      </column>
      <column caption='System' datatype='real' name='[system]' role='measure' type='quantitative'>
      </column>
      <column caption='User' datatype='real' name='[user]' role='measure' type='quantitative'>
      </column>
      <column caption='V-Switched' datatype='integer' name='[v-switched]' role='measure' type='quantitative'>
      </column>
      <column caption='Wait-Time' datatype='real' name='[wait-time ]' role='measure' type='quantitative'>
      </column>
      <column caption='Wall' datatype='real' name='[wall]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[CPU]' derivation='Sum' name='[sum:CPU:qk]' pivot='key' type='quantitative' />
      <column-instance column='[i-switched]' derivation='Sum' name='[sum:i-switched:qk]' pivot='key' type='quantitative' />
      <column-instance column='[system]' derivation='Sum' name='[sum:system:qk]' pivot='key' type='quantitative' />
      <column-instance column='[user]' derivation='Sum' name='[sum:user:qk]' pivot='key' type='quantitative' />
      <column-instance column='[v-switched]' derivation='Sum' name='[sum:v-switched:qk]' pivot='key' type='quantitative' />
      <column-instance column='[wait-time ]' derivation='Sum' name='[sum:wait-time :qk]' pivot='key' type='quantitative' />
      <column-instance column='[wall]' derivation='Sum' name='[sum:wall:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[textscan.41942.520618044000].[sum:CPU:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[textscan.41942.520618044000].[sum:system:qk]&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;[textscan.41942.520618044000]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[textscan.41942.520618044000].[sum:wait-time :qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[textscan.41942.520618044000].[sum:v-switched:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[textscan.41942.520618044000].[sum:user:qk]&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;[textscan.41942.520618044000].[sum:wall:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[textscan.41942.520618044000].[sum:i-switched:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='CPU Bound Processes'>
      <table>
        <view>
          <datasources>
            <datasource caption='4_proc_results' name='textscan.41942.520618044000' />
          </datasources>
          <datasource-dependencies datasource='textscan.41942.520618044000'>
            <column datatype='real' name='[CPU]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Forks]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Proc-Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Sched]' role='dimension' type='nominal'>
            </column>
            <column caption='I-Switched' datatype='integer' name='[i-switched]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Forks]' derivation='None' name='[none:Forks:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Proc-Type]' derivation='None' name='[none:Proc-Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sched]' derivation='None' name='[none:Sched:nk]' pivot='key' type='nominal' />
            <column-instance column='[CPU]' derivation='Sum' name='[sum:CPU:qk]' pivot='key' type='quantitative' />
            <column-instance column='[i-switched]' derivation='Sum' name='[sum:i-switched:qk]' pivot='key' type='quantitative' />
            <column-instance column='[system]' derivation='Sum' name='[sum:system:qk]' pivot='key' type='quantitative' />
            <column-instance column='[user]' derivation='Sum' name='[sum:user:qk]' pivot='key' type='quantitative' />
            <column-instance column='[v-switched]' derivation='Sum' name='[sum:v-switched:qk]' pivot='key' type='quantitative' />
            <column-instance column='[wait-time ]' derivation='Sum' name='[sum:wait-time :qk]' pivot='key' type='quantitative' />
            <column-instance column='[wall]' derivation='Sum' name='[sum:wall:qk]' pivot='key' type='quantitative' />
            <column caption='System' datatype='real' name='[system]' role='measure' type='quantitative'>
            </column>
            <column caption='User' datatype='real' name='[user]' role='measure' type='quantitative'>
            </column>
            <column caption='V-Switched' datatype='integer' name='[v-switched]' role='measure' type='quantitative'>
            </column>
            <column caption='Wait-Time' datatype='real' name='[wait-time ]' role='measure' type='quantitative'>
            </column>
            <column caption='Wall' datatype='real' name='[wall]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.41942.520618044000].[none:Proc-Type:nk]'>
            <groupfilter function='member' level='[none:Proc-Type:nk]' member='&quot;CPU&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.41942.520618044000].[none:Proc-Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[textscan.41942.520618044000].[sum:CPU:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[textscan.41942.520618044000].[sum:i-switched:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' y-axis-name='[textscan.41942.520618044000].[sum:wait-time :qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' y-axis-name='[textscan.41942.520618044000].[sum:wall:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' y-axis-name='[textscan.41942.520618044000].[sum:v-switched:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' y-axis-name='[textscan.41942.520618044000].[sum:user:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='on' />
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' y-axis-name='[textscan.41942.520618044000].[sum:system:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='183' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.41942.520618044000].[sum:CPU:qk] + ([textscan.41942.520618044000].[sum:i-switched:qk] + ([textscan.41942.520618044000].[sum:v-switched:qk] + ([textscan.41942.520618044000].[sum:wait-time :qk] + ([textscan.41942.520618044000].[sum:wall:qk] + ([textscan.41942.520618044000].[sum:user:qk] + [textscan.41942.520618044000].[sum:system:qk]))))))</rows>
        <cols>([textscan.41942.520618044000].[none:Proc-Type:nk] / ([textscan.41942.520618044000].[none:Sched:nk] / [textscan.41942.520618044000].[none:Forks:ok]))</cols>
      </table>
    </worksheet>
    <worksheet name='I/O Bound Processes'>
      <table>
        <view>
          <datasources>
            <datasource caption='4_proc_results' name='textscan.41942.520618044000' />
          </datasources>
          <datasource-dependencies datasource='textscan.41942.520618044000'>
            <column datatype='real' name='[CPU]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Forks]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Proc-Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Sched]' role='dimension' type='nominal'>
            </column>
            <column caption='I-Switched' datatype='integer' name='[i-switched]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Forks]' derivation='None' name='[none:Forks:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Proc-Type]' derivation='None' name='[none:Proc-Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sched]' derivation='None' name='[none:Sched:nk]' pivot='key' type='nominal' />
            <column-instance column='[CPU]' derivation='Sum' name='[sum:CPU:qk]' pivot='key' type='quantitative' />
            <column-instance column='[i-switched]' derivation='Sum' name='[sum:i-switched:qk]' pivot='key' type='quantitative' />
            <column-instance column='[system]' derivation='Sum' name='[sum:system:qk]' pivot='key' type='quantitative' />
            <column-instance column='[user]' derivation='Sum' name='[sum:user:qk]' pivot='key' type='quantitative' />
            <column-instance column='[v-switched]' derivation='Sum' name='[sum:v-switched:qk]' pivot='key' type='quantitative' />
            <column-instance column='[wait-time ]' derivation='Sum' name='[sum:wait-time :qk]' pivot='key' type='quantitative' />
            <column-instance column='[wall]' derivation='Sum' name='[sum:wall:qk]' pivot='key' type='quantitative' />
            <column caption='System' datatype='real' name='[system]' role='measure' type='quantitative'>
            </column>
            <column caption='User' datatype='real' name='[user]' role='measure' type='quantitative'>
            </column>
            <column caption='V-Switched' datatype='integer' name='[v-switched]' role='measure' type='quantitative'>
            </column>
            <column caption='Wait-Time' datatype='real' name='[wait-time ]' role='measure' type='quantitative'>
            </column>
            <column caption='Wall' datatype='real' name='[wall]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.41942.520618044000].[none:Proc-Type:nk]'>
            <groupfilter function='member' level='[none:Proc-Type:nk]' member='&quot;IO&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.41942.520618044000].[none:Proc-Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[textscan.41942.520618044000].[sum:CPU:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[textscan.41942.520618044000].[sum:i-switched:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' y-axis-name='[textscan.41942.520618044000].[sum:wait-time :qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' y-axis-name='[textscan.41942.520618044000].[sum:wall:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' y-axis-name='[textscan.41942.520618044000].[sum:v-switched:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' y-axis-name='[textscan.41942.520618044000].[sum:user:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='on' />
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' y-axis-name='[textscan.41942.520618044000].[sum:system:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='183' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.41942.520618044000].[sum:CPU:qk] + ([textscan.41942.520618044000].[sum:i-switched:qk] + ([textscan.41942.520618044000].[sum:v-switched:qk] + ([textscan.41942.520618044000].[sum:wait-time :qk] + ([textscan.41942.520618044000].[sum:wall:qk] + ([textscan.41942.520618044000].[sum:user:qk] + [textscan.41942.520618044000].[sum:system:qk]))))))</rows>
        <cols>([textscan.41942.520618044000].[none:Proc-Type:nk] / ([textscan.41942.520618044000].[none:Sched:nk] / [textscan.41942.520618044000].[none:Forks:ok]))</cols>
      </table>
    </worksheet>
    <worksheet name='IO/CPU Mix'>
      <table>
        <view>
          <datasources>
            <datasource caption='4_proc_results' name='textscan.41942.520618044000' />
          </datasources>
          <datasource-dependencies datasource='textscan.41942.520618044000'>
            <column datatype='real' name='[CPU]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Forks]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Proc-Type]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Sched]' role='dimension' type='nominal'>
            </column>
            <column caption='I-Switched' datatype='integer' name='[i-switched]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Forks]' derivation='None' name='[none:Forks:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Proc-Type]' derivation='None' name='[none:Proc-Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sched]' derivation='None' name='[none:Sched:nk]' pivot='key' type='nominal' />
            <column-instance column='[CPU]' derivation='Sum' name='[sum:CPU:qk]' pivot='key' type='quantitative' />
            <column-instance column='[i-switched]' derivation='Sum' name='[sum:i-switched:qk]' pivot='key' type='quantitative' />
            <column-instance column='[system]' derivation='Sum' name='[sum:system:qk]' pivot='key' type='quantitative' />
            <column-instance column='[user]' derivation='Sum' name='[sum:user:qk]' pivot='key' type='quantitative' />
            <column-instance column='[v-switched]' derivation='Sum' name='[sum:v-switched:qk]' pivot='key' type='quantitative' />
            <column-instance column='[wait-time ]' derivation='Sum' name='[sum:wait-time :qk]' pivot='key' type='quantitative' />
            <column-instance column='[wall]' derivation='Sum' name='[sum:wall:qk]' pivot='key' type='quantitative' />
            <column caption='System' datatype='real' name='[system]' role='measure' type='quantitative'>
            </column>
            <column caption='User' datatype='real' name='[user]' role='measure' type='quantitative'>
            </column>
            <column caption='V-Switched' datatype='integer' name='[v-switched]' role='measure' type='quantitative'>
            </column>
            <column caption='Wait-Time' datatype='real' name='[wait-time ]' role='measure' type='quantitative'>
            </column>
            <column caption='Wall' datatype='real' name='[wall]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.41942.520618044000].[none:Proc-Type:nk]'>
            <groupfilter function='member' level='[none:Proc-Type:nk]' member='&quot;MIX&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.41942.520618044000].[none:Proc-Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[textscan.41942.520618044000].[sum:CPU:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[textscan.41942.520618044000].[sum:i-switched:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' y-axis-name='[textscan.41942.520618044000].[sum:wait-time :qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' y-axis-name='[textscan.41942.520618044000].[sum:wall:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' y-axis-name='[textscan.41942.520618044000].[sum:v-switched:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' y-axis-name='[textscan.41942.520618044000].[sum:user:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='on' />
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' y-axis-name='[textscan.41942.520618044000].[sum:system:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41942.520618044000].[none:Sched:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='183' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.41942.520618044000].[sum:CPU:qk] + ([textscan.41942.520618044000].[sum:i-switched:qk] + ([textscan.41942.520618044000].[sum:v-switched:qk] + ([textscan.41942.520618044000].[sum:wait-time :qk] + ([textscan.41942.520618044000].[sum:wall:qk] + ([textscan.41942.520618044000].[sum:user:qk] + [textscan.41942.520618044000].[sum:system:qk]))))))</rows>
        <cols>([textscan.41942.520618044000].[none:Proc-Type:nk] / ([textscan.41942.520618044000].[none:Sched:nk] / [textscan.41942.520618044000].[none:Forks:ok]))</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='1' name='CPU Bound Processes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[textscan.41942.520618044000].[none:Sched:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight field='[textscan.41942.520618044000].[none:Sched:nk]'>
        <bucket-selection>
        </bucket-selection>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='I/O Bound Processes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[textscan.41942.520618044000].[none:Sched:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight field='[textscan.41942.520618044000].[none:Sched:nk]'>
        <bucket-selection>
        </bucket-selection>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='IO/CPU Mix'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[textscan.41942.520618044000].[none:Sched:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[textscan.41942.520618044000].[none:Proc-Type:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight field='[textscan.41942.520618044000].[none:Sched:nk]'>
        <bucket-selection>
        </bucket-selection>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='CPU Bound Processes' width='192'>
      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
      DrH0vwEpwdD1ipzKNAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='I/O Bound Processes' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='IO/CPU Mix' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
